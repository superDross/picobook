Before:
  let g:notesdir = expand('/tmp/piconotes')

After:
  :call delete(g:notesdir . '/_indexes/test_index.md')
  

Execute(expect GoToIndex goes to and creates file):
  :call GoToIndex()
  AssertEqual 
    \ expand('%:p'), 
    \ expand(g:notesdir . '/_indexes/index.md')

Execute(expect CreateNewPage creates a new index page from the index):
  :call GoToIndex()
  :call CreateNewPage('Test Index')
  AssertEqual 
    \ expand('%:p'), 
    \ expand(g:notesdir . '/_indexes/test_index.md')

Execute(expect CreateNewPage adds the page header to a new file):
  :call GoToIndex()
  :call CreateNewPage('Test Index')
  AssertEqual 
    \ getline(1),
    \ "<!-- back-button-picobook -->"
  AssertEqual
    \ getline(2),
    \ "[Back](./index.md)"
  AssertEqual
    \ getline(4),
    \ "[TOC]"
  AssertEqual
    \ getline(6),
    \ "# Test Index"

Execute(expect CreateNewPage creates a new page from the test index):
  :call GoToIndex()
  :call CreateNewPage('Test Index')
  :call CreateNewPage('Test Page')
  AssertEqual 
    \ expand('%:p'), 
    \ '/tmp/piconotes/test_index/test_page.md'

Execute(expect CreateNewPage creates a new page from the test index with subtitle):
  :call GoToIndex()
  :call CreateNewPage('Test Index')
  :norm i## Subtitle
  :norm o
  :call CreateNewPage('Test Page')
  AssertEqual 
    \ expand('%:p'), 
    \ '/tmp/piconotes/test_index/subtitle/test_page.md'

Execute(expect error when CreateNewPage is executed and the page exists):
  :call GoToIndex()
  :call CreateNewPage('Test Index')
  :call GoToIndex()
  AssertThrows
    \ :call CreateNewPage('Test Index')
